<div class="container mt-4">
  <h1>Edit Event</h1>

  <%= render 'shared/flash_messages' %>

  <%= form_for @event, html: {class: "needs-validation"} do |f| %>
    <div class="form-group mb-3">
      <%= f.label :name, "Event Name" %>
      <%= f.text_field :name, class: "form-control", placeholder: "Enter event name", required: true %>
    </div>
    
    <div class="form-group mb-3">
      <%= f.label :venue, "Venue" %>
      <%= f.text_field :venue, class: "form-control", placeholder: "Enter venue name", required: true %>
    </div>
    
    <div class="form-group mb-3">
      <%= f.label :location, "Location" %>
      <%= f.text_field :location, class: "form-control", placeholder: "Enter location", required: true %>
    </div>
    
    <div class="form-group mb-3">
      <%= f.label :date, "Date & Time" %>
      <%= f.date_field :date, class: "form-control datetimepicker", placeholder: "Select date and time", required: true %>
    </div>
    
    <div class="form-group mb-4">
      <label class="form-label">Bands</label>
      
      <div class="card mb-3">
        <div class="card-body">
          <div class="band-search-container mb-4">
            <div class="input-group mb-3">
              <span class="input-group-text">
                <i class="bi bi-search"></i>
              </span>
              <input type="text" id="band-search" class="form-control" placeholder="Search for bands">
            </div>
            
            <!-- Loading indicator -->
            <div id="search-loading" class="progress mb-3" style="display: none; height: 4px;">
              <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: 100%"></div>
            </div>
            
            <div id="band-search-results" class="position-relative">
              <!-- Search results will appear here -->
            </div>
          </div>
          
          <div id="selected-bands" class="mb-3">
            <label class="form-label">Selected Artists:</label>
            <div id="selected-bands-list" class="selected-bands-container">
              <!-- No bands selected message -->
              <div id="no-bands-message" class="text-muted text-center p-3">
                No bands selected. Search and add bands above.
              </div>
              <!-- Selected bands will appear here -->
            </div>
          </div>
          
          <!-- Hidden field to store selected band IDs -->
          <div id="band-ids-container">
            <!-- Band IDs will be added here as hidden fields -->
          </div>
        </div>
      </div>
    </div>
    
    <div class="mt-4">
      <%= f.submit "Update", class: "btn btn-primary" %>
      <%= link_to "Cancel", event_path(@event), class: "btn btn-secondary ms-2" %>
    </div>
  <% end %>
</div>

<style>
  .band-search-container {
    border-bottom: 1px solid #dee2e6;
    padding-bottom: 1rem;
  }
  
  .search-results-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 1000;
    max-height: 300px;
    overflow-y: auto;
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  }
  
  .selected-bands-container {
    min-height: 100px;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    background: #f8f9fa;
  }
  
  .selected-band-item {
    display: flex;
    align-items: center;
    padding: 8px 12px;
    margin: 8px;
    background: white;
    border-radius: 4px;
    border: 1px solid #dee2e6;
    transition: all 0.2s;
  }
  
  .selected-band-item:hover {
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  
  .band-search-result-item {
    display: flex;
    align-items: center;
    padding: 8px 12px;
    cursor: pointer;
    transition: background-color 0.2s;
  }
  
  .band-search-result-item:hover {
    background-color: #f0f0f0;
  }
  
  .band-search-result-item.create-new {
    background-color: #e8f4fc;
    border-top: 1px solid #dee2e6;
    justify-content: center;
    font-weight: 500;
    color: #0d6efd;
  }
  
  .band-search-result-item.create-new:hover {
    background-color: #d1e7fa;
  }
  
  .band-img {
    width: 40px;
    height: 40px;
    border-radius: 4px;
    object-fit: cover;
  }
  
  .band-info {
    margin-left: 12px;
  }
</style>

<script>
  // Initialize the band selection functionality
  function initBandSelection() {
    const searchInput = document.getElementById('band-search');
    const searchResults = document.getElementById('band-search-results');
    const selectedBandsList = document.getElementById('selected-bands-list');
    const noBandsMessage = document.getElementById('no-bands-message');
    const bandIdsContainer = document.getElementById('band-ids-container');
    const searchLoading = document.getElementById('search-loading');
    const selectedBands = new Set();
    let searchTimeout = null;
    let searchDropdown = null;
    
    // Clear any existing content from previous page visits
    searchResults.innerHTML = '';
    selectedBandsList.innerHTML = '';
    bandIdsContainer.innerHTML = '';
    
    // Re-add the no bands message (it was cleared above)
    const nobandsMsg = document.createElement('div');
    nobandsMsg.id = 'no-bands-message';
    nobandsMsg.className = 'text-muted text-center p-3';
    nobandsMsg.textContent = 'No bands selected. Search and add bands above.';
    selectedBandsList.appendChild(nobandsMsg);
    
    // Function to update the no bands message visibility
    function updateNoBandsMessage() {
      if (selectedBands.size === 0) {
        noBandsMessage.style.display = 'block';
      } else {
        noBandsMessage.style.display = 'none';
      }
    }
    
    // Function to create the search results dropdown
    function createSearchDropdown() {
      // Remove existing dropdown if it exists
      if (searchDropdown) {
        searchDropdown.remove();
      }
      
      // Create new dropdown
      searchDropdown = document.createElement('div');
      searchDropdown.className = 'search-results-dropdown';
      searchResults.appendChild(searchDropdown);
      
      return searchDropdown;
    }
    
    // Pre-populate selected bands for edit
    <% @event.bands.each do |band| %>
      addBand({
        id: <%= band.id %>,
        name: "<%= band.name %>",
        image_url: "<%= band.photo_url %>"
      });
    <% end %>
    
    // Function to render search results
    function renderSearchResults(results) {
      // Clear existing results and create dropdown container
      const dropdown = createSearchDropdown();
      
      if (results.length === 0) {
        // No results found message
        const noResultsMessage = document.createElement('p');
        noResultsMessage.className = 'text-muted p-3 mb-0';
        noResultsMessage.innerHTML = 'No bands found matching your search.';
        dropdown.appendChild(noResultsMessage);
      } else {
        // Show search results
        results.forEach(band => {
          const item = document.createElement('div');
          item.className = 'band-search-result-item';
          
          // Band image
          const img = document.createElement('img');
          img.className = 'band-img';
          img.src = band.image_url || 'https://via.placeholder.com/40';
          img.alt = band.name;
          img.onerror = function() { this.src = 'https://via.placeholder.com/40'; };
          
          // Band name
          const bandInfo = document.createElement('div');
          bandInfo.className = 'band-info';
          bandInfo.textContent = band.name;
          
          item.appendChild(img);
          item.appendChild(bandInfo);
          
          item.addEventListener('click', () => {
            // Show loading indicator
            searchLoading.style.display = 'block';
            
            // When a band is selected, get detailed info and add to database
            fetch(`/spotify/get_artist_info?spotify_id=${encodeURIComponent(band.spotify_id)}`)
              .then(response => response.json())
              .then(data => {
                if (data.band_id && !selectedBands.has(data.band_id.toString())) {
                  addBand({
                    id: data.band_id,
                    name: data.name,
                    image_url: data.photo_url
                  });
                  searchInput.value = '';
                  dropdown.remove();
                  searchDropdown = null;
                }
                // Hide loading indicator
                searchLoading.style.display = 'none';
              })
              .catch(error => {
                console.error('Error fetching artist info:', error);
                // Hide loading indicator
                searchLoading.style.display = 'none';
              });
          });
          
          dropdown.appendChild(item);
        });
      }
      
      // Always add "Create New" as the last option
      const createNewItem = document.createElement('div');
      createNewItem.className = 'band-search-result-item create-new';
      createNewItem.innerHTML = '<i class="bi bi-plus-circle me-2"></i> None found? Create New';
      createNewItem.addEventListener('click', () => {
        window.location.href = '<%= new_band_path %>';
      });
      dropdown.appendChild(createNewItem);
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function(e) {
        if (!searchResults.contains(e.target) && !searchInput.contains(e.target)) {
          if (searchDropdown) {
            searchDropdown.remove();
            searchDropdown = null;
          }
        }
      });
    }
    
    // Function to add a band to selected list
    function addBand(band) {
      if (selectedBands.has(band.id.toString())) return;
      
      selectedBands.add(band.id.toString());
      
      // Add to visual list
      const item = document.createElement('div');
      item.className = 'selected-band-item';
      item.id = `band-item-${band.id}`;
      
      // Band image
      const img = document.createElement('img');
      img.className = 'band-img';
      img.src = band.image_url || 'https://via.placeholder.com/40';
      img.alt = band.name;
      img.onerror = function() { this.src = 'https://via.placeholder.com/40'; };
      
      // Band name and remove button container
      const itemContent = document.createElement('div');
      itemContent.className = 'd-flex justify-content-between align-items-center w-100 ms-2';
      
      // Band name
      const bandName = document.createElement('span');
      bandName.textContent = band.name;
      
      // Remove button with text
      const removeBtn = document.createElement('button');
      removeBtn.type = 'button';
      removeBtn.className = 'btn btn-sm btn-danger';
      removeBtn.innerHTML = 'Remove';
      removeBtn.setAttribute('data-id', band.id);
      removeBtn.setAttribute('title', 'Remove band');
      removeBtn.addEventListener('click', () => {
        removeBand(band.id);
      });
      
      // Add elements to item
      itemContent.appendChild(bandName);
      itemContent.appendChild(removeBtn);
      item.appendChild(img);
      item.appendChild(itemContent);
      
      selectedBandsList.appendChild(item);
      
      // Add hidden input
      const input = document.createElement('input');
      input.type = 'hidden';
      input.name = 'event[band_ids][]';
      input.value = band.id;
      input.id = `band-input-${band.id}`;
      bandIdsContainer.appendChild(input);
      
      // Update no bands message
      updateNoBandsMessage();
    }
    
    // Function to remove a band from selected list
    function removeBand(bandId) {
      selectedBands.delete(bandId.toString());
      
      // Remove visual item
      const item = document.getElementById(`band-item-${bandId}`);
      if (item) item.remove();
      
      // Remove hidden input
      const input = document.getElementById(`band-input-${bandId}`);
      if (input) input.remove();
      
      // Update no bands message
      updateNoBandsMessage();
    }
    
    // Search input event with debounce
    searchInput.addEventListener('input', function() {
      const query = this.value.trim();
      
      // Clear any existing timeout
      if (searchTimeout) {
        clearTimeout(searchTimeout);
      }
      
      // If query is empty, close dropdown and return
      if (query === '') {
        if (searchDropdown) {
          searchDropdown.remove();
          searchDropdown = null;
        }
        return;
      }
      
      // Show loading indicator
      searchLoading.style.display = 'block';
      
      // Set a timeout to prevent too many API calls
      searchTimeout = setTimeout(() => {
        // Call Spotify API
        fetch(`/spotify/search_artists?query=${encodeURIComponent(query)}`)
          .then(response => response.json())
          .then(data => {
            renderSearchResults(data);
            // Hide loading indicator
            searchLoading.style.display = 'none';
          })
          .catch(error => {
            console.error('Error searching artists:', error);
            
            // Show error in dropdown
            const dropdown = createSearchDropdown();
            dropdown.innerHTML = '<p class="text-danger p-3 mb-0">Error searching for artists</p>';
            
            // Hide loading indicator
            searchLoading.style.display = 'none';
          });
      }, 500); // 500ms delay
    });
    
    // Initialize the no bands message
    updateNoBandsMessage();
  }

  // Run initialization on DOMContentLoaded
  document.addEventListener('DOMContentLoaded', initBandSelection);
  
  // Also run initialization on Turbo navigation
  document.addEventListener('turbo:load', initBandSelection);
  
  // Fallback for non-Turbo navigation
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    initBandSelection();
  }
</script> 